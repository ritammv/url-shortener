[{"/Users/ritamverma/Coding/moving-worlds/client/src/index.tsx":"1","/Users/ritamverma/Coding/moving-worlds/client/src/reportWebVitals.ts":"2","/Users/ritamverma/Coding/moving-worlds/client/src/App.tsx":"3","/Users/ritamverma/Coding/moving-worlds/client/src/components/Form.tsx":"4","/Users/ritamverma/Coding/moving-worlds/client/src/services/apiClient.ts":"5","/Users/ritamverma/Coding/moving-worlds/client/src/components/ShortUrl/ShortUrl.tsx":"6"},{"size":501,"mtime":1609844663795,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1610097597550,"results":"9","hashOfConfig":"8"},{"size":209,"mtime":1610097038659,"results":"10","hashOfConfig":"8"},{"size":1598,"mtime":1610100716417,"results":"11","hashOfConfig":"8"},{"size":534,"mtime":1610100069233,"results":"12","hashOfConfig":"8"},{"size":170,"mtime":1610100650062,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"jfkt0t",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ritamverma/Coding/moving-worlds/client/src/index.tsx",[],["29","30","31","32","33","34","35"],"/Users/ritamverma/Coding/moving-worlds/client/src/reportWebVitals.ts",["36"],"import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/Users/ritamverma/Coding/moving-worlds/client/src/App.tsx",[],"/Users/ritamverma/Coding/moving-worlds/client/src/components/Form.tsx",[],"/Users/ritamverma/Coding/moving-worlds/client/src/services/apiClient.ts",["37","38"],"const BASE_URL = \"http://localhost:3001\";\n\nconst getToUrl = (code: string): Promise<Url> => {\n  return fetch(`${BASE_URL}/${code}`)\n    .then((res) => res.json())\n    .catch((err) => console.error(err));\n};\n\nconst sendUrl = (urlObject: UserUrl): Promise<Url> => {\n  return fetch(`${BASE_URL}/api`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(urlObject),\n  })\n    .then((res) => res.json())\n    .catch((err) => console.error(err));\n};\n\nexport default {\n  getToUrl,\n  sendUrl,\n};\n","/Users/ritamverma/Coding/moving-worlds/client/src/components/ShortUrl/ShortUrl.tsx",["39"],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":3,"column":25,"nodeType":"56","messageId":"57","endLine":3,"endColumn":57},{"ruleId":"58","severity":1,"message":"59","line":6,"column":21,"nodeType":"60","messageId":"61","endLine":6,"endColumn":34},{"ruleId":"58","severity":1,"message":"59","line":16,"column":21,"nodeType":"60","messageId":"61","endLine":16,"endColumn":34},{"ruleId":"54","severity":1,"message":"55","line":7,"column":18,"nodeType":"56","messageId":"57","endLine":7,"endColumn":41},"jest/no-try-expect",["62"],"jsx-a11y/accessible-emoji",[],"lines-around-directive",["63"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","no-console","Unexpected console statement.","MemberExpression","unexpected","no-conditional-expect","padding-line-between-statements"]